{"version":3,"sources":["components/CreateRoom.js","components/JoinRoom.js","components/HostSongItem.js","components/HostSongs.js","components/SearchBar.js","components/SongRequestItem.js","components/SongRequests.js","components/pages/Room.js","components/pages/JoinPage.js","components/SongItem.js","components/Songs.js","components/pages/SearchPage.js","App.js","serviceWorker.js","index.js","OxCordLogoFinal.png","components/pages/oxImage.jpg"],"names":["CreateRoom","render","history","className","style","buttonStyle","onClick","newPin","Math","floor","random","setState","pin","query","axios","post","localStorage","clear","push","pathname","data","Component","display","borderColor","paadding","cursor","JoinRoom","Button","type","top","HostSongItem","this","props","song","videoId","title","thumbnail","description","src","alt","deleteSong","bind","HostSongs","songs","map","key","info","SearchBar","state","searchQuery","handleChange","event","target","value","handleSubmit","then","addRequests","catch","err","console","error","log","res","preventDefault","onSubmit","name","flex","padding","placeholder","onChange","background","color","width","SongRequestItem","addSong","SongRequests","requests","socket","Room","flag","handleClose","e","parseInt","emit","id","snippet","thumbnails","default","url","duplicate","item","alert","newSong","filter","setItem","JSON","stringify","updateQueue","io","window","addEventListener","location","getItem","newRoom","undefined","parse","removeItem","currentVid","on","player","playerObject","cueVideoById","playVideo","currentSong","removeEventListener","delete","statusCode","reloadId","videoTitle","length","setCurrentlyPlayingToEmptyString","YouTube","opts","playerVars","autoplay","rel","onReady","_onReady","onEnd","onError","logo","particleOpt","particles","number","density","enable","value_area","JoinPage","routeChange","a","params","get","result","exists","class","SongItem","Songs","SearchPage","fetchSongs","App","exact","path","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.aaa54d47.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport './RoomButton.css';\r\n\r\nexport class CreateRoom extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              <Route render={({ history}) => (\r\n                <button\r\n                  // type='button'\r\n                  className='button'\r\n                  style={buttonStyle}\r\n                  onClick={() => { \r\n                    let newPin = Math.floor(Math.random() * 9000, 10000)\r\n                    this.setState({ pin: newPin })\r\n                    \r\n                    //let stringPin = parseInt(newPin, 10);\r\n                    const query = {\r\n                      pin: newPin\r\n                    }\r\n                    axios.post(\"http://localhost:8080/dbController/createRoom\", query);\r\n                    localStorage.clear();\r\n          \r\n                    let path = '/room';\r\n                    history.push({\r\n                        pathname: path,\r\n                        data: newPin\r\n                    }\r\n                    ) \r\n                  }}\r\n                >\r\n                  <span>Create Room</span>\r\n                </button>\r\n              )} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst buttonStyle = {\r\n    display: 'inline-block',\r\n    borderColor: '#555',\r\n    // background: '#555',\r\n    // color: '#fff',\r\n    paadding: '7px 20px',\r\n    cursor: 'pointer'\r\n}\r\n\r\nexport default CreateRoom\r\n","import React, { Component } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport './RoomButton.css';\r\n\r\nexport class JoinRoom extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Button = () => (\r\n    <Route render={({ history}) => (\r\n      <button\r\n        type='button'\r\n        className='button'\r\n        style={buttonStyle}\r\n        onClick={() => { history.push('/JoinPage') }}\r\n      >\r\n        <span>Join Room</span>\r\n      </button>\r\n    )} />\r\n  )\r\n\r\nconst buttonStyle = {\r\n    display: 'inline-block',\r\n    borderColor: '#555',\r\n    // background: '#555',\r\n    // color: '#fff',\r\n    paadding: '7px 20px',\r\n    cursor: 'pointer',\r\n    top: '10px',\r\n}\r\n\r\n\r\nexport default JoinRoom\r\n","import React, { Component } from 'react'\r\nimport './ItemDesign.css';\r\n\r\nexport class HostSongItem extends Component {\r\n    \r\n    render() {\r\n        const {videoId, title, description, thumbnail} = this.props.song;\r\n        return (\r\n            <div className=\"box-container\">\r\n                <div className=\"thumbnail-container\">\r\n                    <img \r\n                    className=\"thumbnail\"\r\n                        src={thumbnail} \r\n                        alt= {title}\r\n                    />\r\n                </div>\r\n                <div className=\"title-container\">\r\n                    <p className=\"title-info\">\r\n                        {title}\r\n                    </p>\r\n                    <p>\r\n                        <button onClick={this.props.deleteSong.bind(this, videoId)} className=\"removeButton\">X</button>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default HostSongItem\r\n","import React, { Component } from 'react'; \r\nimport HostSongItem from './HostSongItem';\r\n\r\nexport class HostSongs extends Component {\r\n    render() { \r\n        \r\n        return this.props.songs.map((song) => (\r\n            <HostSongItem \r\n                key={song.videoId} \r\n                song={song}                \r\n                deleteSong={this.props.deleteSong}\r\n            />\r\n        ));\r\n    }\r\n}\r\n\r\nexport default HostSongs\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nvar info = null\r\n\r\nexport class SearchBar extends Component {\r\n    state = {\r\n        searchQuery: ''\r\n    }\r\n    // parser(time){\r\n    //     var timeStr = '';\r\n    //     var hours = '';\r\n    //     var minutes = '';\r\n    //     var seconds = '';\r\n        \r\n    //     var index = time.length-1;\r\n        \r\n    //     while(index > -1){\r\n    //         if(time.indexOf('S') !== -1){\r\n    //             while(time.charAt(i-1) !== 'M' || time.charAt(i-1) !== 'H'|| time.charAt(i-1) !== 'T'){\r\n    //                 seconds.concat(time.charAt(i-1));\r\n    //                 index--;  \r\n    //             }\r\n    //         }\r\n    //         else if(time.indexOf('M') !== -1){\r\n    //             while(time.charAt(i-1) !== 'H'|| time.charAt(i-1) !== 'T'){\r\n    //                 minutes.concat(time.charAt(i-1));\r\n    //                 index--;\r\n    //             }\r\n    //         }\r\n    //         else if(time.indexOf('H') !== -1){\r\n    //             while(time.charAt(i-1) !== 'T'){\r\n    //                 hours.concat(time.charAt(i-1));\r\n    //                 index--;\r\n    //             }\r\n    //         }\r\n    //         else{\r\n    //             index--;\r\n    //         }\r\n    //     }\r\n    //     return {hours: hours, minutes: minutes, seconds: seconds}\r\n    // }\r\n    handleChange = (event) => {\r\n        this.setState({searchQuery: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n      //alert('A name was submitted: ' + this.state.value);\r\n      //console.log('SearchBarjs: currently submitted query', this.state.searchQuery)\r\n      var string = this.state.searchQuery;\r\n      \r\n      const query = {\r\n        \"value\":string\r\n      };\r\n\r\n\r\n    axios.post('http://localhost:8080/searchController/search', query)\r\n    .then((data) => {\r\n        //console.log('SeachBar.js: responde from yt', data);\r\n\r\n    //   var songs = data.data\r\n    //   info = {\r\n    //     'id1': data.data.items[0].id.videoId,\r\n    //     'id2': data.data.items[1].id.videoId,\r\n    //     'id3': data.data.items[2].id.videoId,\r\n    //     'id4':data.data.items[3].id.videoId,\r\n    //     'id5': data.data.items[4].id.videoId\r\n    //   }\r\n        this.info = data.data\r\n        this.props.addRequests(data.data)\r\n        this.setState({searchQuery: ''})\r\n\r\n\r\n        })\r\n        .catch(err => {\r\n        console.error('SearchBar.js: quiery didnt work');\r\n        })\r\n        console.log(info);\r\n\r\n    axios.post('http://localhost:8080/searchController/searchinfo', 'E2y2ey2oPAk')\r\n    .then((res) => {\r\n    //console.log('SeachBar.js: responde from yt', data);\r\n    // this.props.addRequests(data)\r\n    // this.setState({searchQuery: ''})\r\n    })\r\n    .catch(err => {\r\n        console.error('SearchBar.js: info query didnt work');\r\n    })\r\n\r\n      \r\n\r\n      event.preventDefault();\r\n      //player.cueVideoById(\"https://www.youtube.com/watch?v=YEJBmmqXUQs\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} style={{display: 'flex'}}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"textBox\"\r\n                        style={{ flex: '10', padding: '8px' }}\r\n                        placeholder=\"Enter Song Request\"\r\n                        value={this.state.searchQuery}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <input\r\n                        type=\"submit\"\r\n                        name=\"title\"\r\n                        placeholder=\"Search\"\r\n                        value=\"Search\"\r\n                        style={buttonStyle}\r\n\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst buttonStyle = {\r\n    display: 'inline-block',\r\n    borderColor: '#555',\r\n    background: '#555',\r\n    color: '#fff',\r\n    paadding: '7px 20px',\r\n    cursor: 'pointer',\r\n    width:'10%'\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { Component } from 'react'\r\nimport './ItemDesign.css';\r\n\r\nexport class SongRequestItem extends Component {\r\n    render() {  \r\n        const {title, description, thumbnail} = this.props.song;\r\n        return (\r\n            <div className=\"box-container\">\r\n                <div className=\"thumbnail-container\">\r\n                    <img \r\n                        className=\"thumbnail\"\r\n                        src={thumbnail} \r\n                        alt= {title}\r\n                    />\r\n                </div>\r\n                <div className=\"title-container\">\r\n                    <p className=\"title-info\">\r\n                        {title}\r\n                    </p>\r\n                    <p>\r\n                        <button onClick={this.props.addSong.bind(this, this.props.song)} className=\"addButton\">+</button>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// SongItem.propTypes = {\r\n//     song: PropTypes.object.isRequired\r\n// }\r\n\r\nexport default SongRequestItem\r\n","import React, { Component } from 'react'; \r\nimport SongRequestItem from './SongRequestItem';\r\n\r\nexport class SongRequests extends Component {\r\n    render() {         \r\n        return this.props.requests.map((song) => (\r\n            <SongRequestItem\r\n                key={song.videoId} \r\n                song={song}                \r\n                addSong={this.props.addSong}\r\n                />\r\n        ));\r\n    }\r\n}\r\n\r\n// PropTypes\r\n// Songs.propTypes = {\r\n//     songs: PropTypes.array.isRequired\r\n// }\r\n\r\nexport default SongRequests\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport HostSongs from '../HostSongs';\r\nimport SearchBar from '../SearchBar'\r\nimport YouTube from 'react-youtube';\r\nimport io from 'socket.io-client';\r\nimport SongRequests from '../SongRequests';\r\nimport { SlowBuffer } from 'buffer';\r\nimport logo from './oxImage.jpg';\r\nimport axios from 'axios';\r\nimport '../Room.css';\r\n\r\nvar socket = null;\r\n\r\nexport class Room extends Component {\r\n\r\n  state = {\r\n      songs: [],\r\n      pin: '',\r\n      requests: [],\r\n      flag: true\r\n  }\r\n  \r\n  componentDidMount() {\r\n    socket = io('http://localhost:8080/communication')\r\n    window.addEventListener('beforeunload', this.handleClose);\r\n    \r\n    var pin = this.props.history.location.data;\r\n    var songs = [];\r\n    console.log('pin from history', pin);\r\n    console.log('pin in local', localStorage.getItem('pinInLocalStorage'));\r\n    var newRoom = false;\r\n\r\n    if(localStorage.getItem('pinInLocalStorage') == undefined){\r\n      console.log('pin set to history');\r\n      pin = this.props.history.location.data;      \r\n    } else {   \r\n      if(pin == undefined){\r\n        console.log('pin undefined and set to local value');\r\n        pin = localStorage.getItem('pinInLocalStorage')\r\n        newRoom = false;\r\n      } else {\r\n        newRoom = true\r\n        console.log('local not null and pin not undefined so set to pin');\r\n      }\r\n    }\r\n\r\n    if(JSON.parse(localStorage.getItem('songsInLocalStorage')) != null && !newRoom){\r\n      console.log('songs set to local');\r\n      songs = JSON.parse(localStorage.getItem('songsInLocalStorage'))\r\n    } else {\r\n      console.log('songs set to nothing');\r\n      localStorage.removeItem('songsInLocalStorage');\r\n      songs = []\r\n      //localStorage.setItem('songsInLocalStorage', JSON.stringify(songs))\r\n    }\r\n     \r\n    socket.emit('host-join-up', { pin: pin });\r\n\r\n    this.setState({ \r\n      pin: pin,\r\n      songs: songs,\r\n      currentVid: ''\r\n    });\r\n\r\n    var numberPin = parseInt(pin,10);\r\n    const query = {\r\n      pin: numberPin\r\n    }\r\n    axios.post(\"http://localhost:8080/dbController/createRoom\", query);\r\n    localStorage.setItem('pinInLocalStorage', pin);\r\n    //Adding socket event handlers\r\n    socket.on('user-join-down', data => {\r\n      //Add 1 to a count of users currently in room\r\n      //Possibly update db value\r\n    });\r\n\r\n    socket.on('add-song-down', data => {\r\n      //Add song to state array\r\n      const player = this.state.playerObject;\r\n      this.setState({ songs: [...this.state.songs, data.song] })\r\n      if(this.state.flag) {\r\n        this.setState({currentVid: this.state.songs[0].title});\r\n        localStorage.setItem('currentVid', this.state.songs[0].title);\r\n        localStorage.setItem('currentVidId', this.state.songs[0].videoId);\r\n        player.cueVideoById(this.state.songs[0].videoId);\r\n        this.updateQueue(this.state.songs[0].videoId);\r\n        player.playVideo();\r\n        this.setState({flag: false});\r\n      }\r\n      localStorage.setItem('songsInLocalStorage', JSON.stringify(this.state.songs));\r\n        \r\n    });\r\n\r\n    socket.on('user-request-queue-down', function(data){\r\n      console.log('user-request-queue-down');\r\n      console.log(data.pin);\r\n\r\n      socket.emit('host-response-queue-up', { \r\n        songs: JSON.parse(localStorage.getItem('songsInLocalStorage')), \r\n        pin: localStorage.getItem('pinInLocalStorage'),\r\n        currentSong: localStorage.getItem('currentVid')\r\n      });                                    \r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('onbeforeunload', this.handleClose);\r\n    console.log(\"PIN in room: \" + this.state.pin);\r\n    var numberPin = parseInt(this.state.pin);\r\n    const query = {\r\n      data: {pin: numberPin}\r\n    }\r\n    axios.delete(\"http://localhost:8080/dbController/deleteRoom\", query)\r\n    .then(data => {\r\n      console.log(data.statusCode);\r\n    });\r\n    const data = {\r\n      pin: this.state.pin\r\n    }  \r\n    socket.emit('leave-room', data);\r\n  }\r\n\r\n  handleClose = (e) =>  {  \r\n    var numberPin = parseInt(this.state.pin, 10);\r\n    const data = {\r\n      pin: this.state.pin\r\n    }\r\n\r\n    socket.emit('delete-room', data);\r\n    socket.emit('leave-room', data);\r\n  }\r\n\r\n  addRequests = (songs) => {\r\n    console.log('SearchPage.js: adding new songs', songs);\r\n    this.setState({requests: []})\r\n    songs.map((song) => (\r\n      this.setState({ requests: [...this.state.requests, {\r\n        videoId: song.id.videoId,\r\n        title: song.snippet.title,\r\n        description: song.snippet.description,\r\n        thumbnail: song.snippet.thumbnails.default.url\r\n      }]})\r\n    ));\r\n  }\r\n\r\n  addSong = (song) => {\r\n    var duplicate = false\r\n    this.state.songs.map((item) => {\r\n      if(item.videoId === song.videoId){\r\n        duplicate = true\r\n      }\r\n    });\r\n\r\n    if(duplicate){\r\n      alert('That song is already in the queue!')\r\n    } else {\r\n      console.log(song);\r\n      const newSong = {\r\n        videoId: song.videoId,\r\n        title: song.title,\r\n        description: song.description,\r\n        thumbnail: song.thumbnail\r\n      }\r\n      console.log('SearchPage.js: emmitting to server');\r\n      socket.emit('add-song-up', {song: newSong, pin: this.state.pin});\r\n      this.setState({ requests: [...this.state.requests.filter(item => item.videoId !== song.videoId)] })\r\n    }\r\n  }\r\n\r\n  deleteSong = (videoId) => {\r\n    socket.emit('remove-song-up', {videoId: videoId, pin: this.state.pin});\r\n    this.setState({ songs: [...this.state.songs.filter(song => song.videoId !== videoId)] });\r\n    localStorage.setItem('songsInLocalStorage', JSON.stringify(this.state.songs));\r\n  }\r\n  \r\n  _onReady(event) {\r\n    console.log('onReady');\r\n    const player = event.target;\r\n    player.playVideo();\r\n    this.state.playerObject = player;\r\n\r\n    if(localStorage.getItem('currentVidId') != null  ) {\r\n      this.state.flag = false;\r\n      const reloadId = localStorage.getItem('currentVidId');\r\n      const videoTitle = localStorage.getItem('currentVid');\r\n      this.setState({\r\n        currentVid: videoTitle\r\n      });\r\n      player.cueVideoById(reloadId);\r\n      player.playVideo();\r\n    } else {\r\n      console.log(\"no id in ls\");\r\n    }\r\n  }\r\n\r\n  updateQueue = (videoId) => {\r\n    socket.emit('update-queue-up', {videoId: videoId, pin: this.state.pin});\r\n    this.setState({ songs: [...this.state.songs.filter(song => song.videoId !== videoId)] });\r\n    localStorage.setItem('songsInLocalStorage', JSON.stringify(this.state.songs));\r\n  }\r\n\r\n  setCurrentlyPlayingToEmptyString() {\r\n    socket.emit('no-current-song', {pin: this.state.pin});\r\n    this.setState({\r\n      currentVid: \"\"\r\n    });\r\n    localStorage.setItem('currentVid', '');\r\n    localStorage.setItem('currentVidId', '');\r\n  }\r\n\r\n  onEnd(event) {\r\n    console.log('onend');\r\n    const player = event.target;\r\n    if(this.state.songs.length){\r\n      this.setState({currentVid: this.state.songs[0].title});\r\n      localStorage.setItem('currentVid', this.state.songs[0].title);\r\n      localStorage.setItem('currentVidId', this.state.songs[0].videoId)\r\n      player.cueVideoById(this.state.songs[0].videoId);\r\n      this.updateQueue(this.state.songs[0].videoId);\r\n      player.playVideo();\r\n    } else {\r\n      this.setCurrentlyPlayingToEmptyString();\r\n      this.setState({flag: true});\r\n    }\r\n  }\r\n\r\n  onError(event) {\r\n    this.state.flag = true;\r\n    console.log('onError');\r\n    const player = event.target;\r\n\r\n    console.log(localStorage.getItem('currentVidId'));\r\n    \r\n    if(localStorage.getItem('currentVidId') !== null && localStorage.getItem('currentVidId') !== '' ) {\r\n      this.state.flag = false;\r\n      const reloadId = localStorage.getItem('currentVidId');\r\n      const videoTitle = localStorage.getItem('currentVid');\r\n      this.setState({\r\n        currentVid: videoTitle\r\n      });\r\n      player.cueVideoById(reloadId);\r\n      player.playVideo();\r\n    } else {\r\n      console.log(\"Error hit and no videoID from previous session, load default video\");\r\n      this.state.flag = true;\r\n      player.cueVideoById('AjWfY7SnMBI');\r\n      player.playVideo();\r\n    }\r\n    player.playVideo();\r\n  }\r\n\r\n  render() {\r\n    const opts = {\r\n      // height: 600,\r\n      playerVars: { // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,\r\n        rel: 0\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"main-container\">\r\n        <header className=\"header\">\r\n          <h1>Room #{this.state.pin} Currently Playing: {this.state.currentVid}</h1>\r\n        </header>\r\n        <div className=\"searchBar-container\">\r\n          <SearchBar addRequests={this.addRequests}/>\r\n        </div>\r\n        <div className = \"song-container\">\r\n          <p className = \"songPrompt\">Search Results</p>\r\n          <div className=\"song-bounding\">\r\n            <SongRequests requests={this.state.requests} addSong={this.addSong}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"queue-container\">\r\n          <p className = \"queuePrompt\">Current Queue</p>\r\n          <div className=\"queue-bounding\">\r\n            <HostSongs songs={this.state.songs} deleteSong={this.deleteSong}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"video-container\">\r\n          <YouTube \r\n            className=\"player\"\r\n            videoId={'AjWfY7SnMBI'}\r\n            opts={opts}\r\n            onReady={this._onReady.bind(this)}\r\n            onEnd={this.onEnd.bind(this)}\r\n            onError={this.onError.bind(this)}\r\n          />\r\n         </div>\r\n        <div className=\"logo-container\">\r\n          {<img src={logo} className=\"logo-shape\"/>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Room","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './JoinPage.css';\r\nimport '../RoomButton.css';\r\nimport Particles from 'react-particles-js';\r\n\r\nconst particleOpt = {\r\n    particles:{\r\n      number:{\r\n        value: 150,\r\n        density: {\r\n          enable: true,\r\n          value_area: 800,\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\nexport class JoinPage extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pin: '',\r\n        }\r\n        this.routeChange = this.routeChange.bind(this);\r\n    }\r\n\r\n    routeChange = async (e) => {\r\n        e.preventDefault();\r\n        const query = {\r\n            params: {pin: this.state.pin}\r\n        }\r\n      \r\n        let result = await axios.get(\"http://localhost:8080/dbController/doesRoomExist\", query);\r\n        let exists = result.data.exists;\r\n\r\n        console.log(exists);\r\n\r\n        if(exists === true) {\r\n            console.log(\"If hit\");\r\n            let path = `/searchPage`;\r\n            this.props.history.push({\r\n                pathname: path,\r\n                data: this.state.pin\r\n            });\r\n        } else {\r\n            console.log(\"Else hit\");\r\n            alert(\"This room does not exist\");\r\n        }  \r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({pin: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        let path = `/searchPage`;\r\n        this.props.history.push({\r\n            pathname: path,\r\n            data: this.state.pin\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='component-container' >\r\n                <Particles className=\"particles\"\r\n              params={particleOpt}\r\n                />\r\n                <header className='component-header'>\r\n                    <form className='text-container'onSubmit={this.routeChange}>\r\n                        <h1>Enter a Room Number:</h1>\r\n                        <input\r\n                            className=\"inputBox\"\r\n                            type=\"text\"\r\n                            name=\"textBox\"\r\n                            style={{padding: '5px' }}\r\n                            placeholder=\"####\"\r\n                            value={this.state.pin}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <div class=\"divider\"/>\r\n                        <input\r\n                            className=\"button\"\r\n                            type=\"submit\"\r\n                            name=\"title\"\r\n                            value= \"Join!\"\r\n                            placeholder=\"Search\"\r\n                        />\r\n                    </form>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JoinPage;","import React, { Component } from 'react'\r\nimport './ItemDesign.css';\r\n\r\nexport class SongItem extends Component {\r\n    \r\n    render() {\r\n        const {title, description, thumbnail} = this.props.song;\r\n        return (\r\n            <div className=\"box-container\">\r\n                <div className=\"thumbnail-container\">       \r\n                    <img \r\n                        className=\"thumbnail\"\r\n                        src={thumbnail} \r\n                        alt= {title}\r\n                    />\r\n                </div>\r\n                <div className=\"title-container\">\r\n                    <p className=\"title-info\">\r\n                        {title}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SongItem\r\n","import React, { Component } from 'react'; \r\nimport SongItem from './SongItem';\r\n\r\nexport class Songs extends Component {\r\n    render() { \r\n        \r\n        return this.props.songs.map((song) => (\r\n            <SongItem \r\n                key={song.videoId} \r\n                song={song}                \r\n                addSong={this.props.addSong}\r\n            />\r\n        ));\r\n    }\r\n}\r\n\r\nexport default Songs\r\n\r\n\r\n","//Page component to allow users to query for songs\r\nimport React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\nimport SearchBar from '../SearchBar';\r\nimport Songs from '../Songs';\r\nimport SongRequests from '../SongRequests';\r\nimport './SearchPage.css';\r\nimport Particles from 'react-particles-js';\r\n\r\nvar socket = null\r\n\r\nconst particleOpt = {\r\n    particles:{\r\n      number:{\r\n        value: 150,\r\n        density: {\r\n          enable: true,\r\n          value_area: 800,\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\nexport class SearchPage extends Component {\r\n\r\n    constructor() {\r\n        super();  \r\n        this.state = {\r\n            songs: [],\r\n            requests: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        socket = io('http://localhost:8080/communication')\r\n        var pin = this.props.history.location.data;\r\n        \r\n        var newRoom = false;\r\n\r\n        if(localStorage.getItem('pinInLocalStorage') === undefined){\r\n            console.log('pin set to history');\r\n            pin = this.props.history.location.data;\r\n        }\r\n        else{\r\n            if(pin === undefined){\r\n                console.log('pin undefined and set to local value');\r\n                pin = localStorage.getItem('pinInLocalStorage')\r\n            }\r\n            else{\r\n                newRoom = true\r\n                console.log('local not null and pin not undefined so set to pin');\r\n            }\r\n        }\r\n        // if(JSON.parse(localStorage.getItem('songsInLocalStorage')) != null && !newRoom){\r\n        //     console.log('songs set to local');\r\n        //     songs = JSON.parse(localStorage.getItem('songsInLocalStorage'))\r\n        // }\r\n        // else{\r\n        //     console.log('songs set to nothing');\r\n        //     localStorage.removeItem('songsInLocalStorage');\r\n        //     songs = []\r\n        // }\r\n        this.setState({\r\n            pin: pin,\r\n            songs: [],\r\n            requests: [],\r\n            currentVid: ''\r\n        })\r\n        localStorage.setItem('pinInLocalStorage', pin);\r\n        console.log('pin in local storage', localStorage.getItem('pinInLocalStorage'));\r\n        // console.log('songs in local storage', JSON.parse(localStorage.getItem('songsInLocalStorage')));\r\n\r\n        \r\n        //localStorage.removeItem('songsInLocalStorage');\r\n\r\n        //Emit event that a user (you in this case) has joined the room\r\n        socket.emit('user-join-up', { pin: pin});\r\n\r\n        //Adding socket event handlers\r\n        socket.on('user-join-down', data => {\r\n            //Add 1 to a count of users currently in room\r\n        });\r\n        socket.on('add-song-down', data => {\r\n            // console.log(localStorage.getItem('songsInLocalStorage'));\r\n            \r\n            //console.log(JSON.parse(localStorage.getItem('songsInLocalStorage')));\r\n            this.setState({ songs: [...this.state.songs, data.song] })\r\n            console.log(this.state.songs)\r\n            //console.log(JSON.parse(JSON.stringify(localStorage.getItem('songsInLocalStorage'))));\r\n            console.log('Song state: ' + JSON.stringify(this.state.songs))\r\n            // localStorage.setItem('songsInLocalStorage', JSON.stringify(this.state.songs));   \r\n            \r\n        });\r\n        socket.on('remove-song-down', data =>{\r\n            console.log('request made from user at pin', data.pin);\r\n            console.log('local pin', this.state.pin);\r\n    \r\n            this.setState({ songs: [...this.state.songs.filter(song => song.videoId !== data.videoId)] });\r\n            localStorage.setItem('songsInLocalStorage', JSON.stringify(this.state.songs));\r\n          });\r\n\r\n        socket.on('update-queue-down', data => {\r\n            console.log('update-queue-down hit');\r\n            this.setState({\r\n                currentVid: this.state.songs[0].title\r\n            });\r\n            this.setState({ songs: [...this.state.songs.filter(song => song.videoId !== data.videoId)] });\r\n            localStorage.setItem('songsInLocalStorage', JSON.stringify(this.state.songs));\r\n        });\r\n        \r\n        socket.on('no-current-song-down', data => {\r\n            console.log('no-current-song-down hit');\r\n            this.setState({currentVid: ''});\r\n            localStorage.setItem('currentVid', '')\r\n        })\r\n        console.log(this.state);\r\n        \r\n        this.fetchSongs()\r\n    };\r\n\r\n    fetchSongs = () => {\r\n        console.log('emmitting request for songs');\r\n        console.log(localStorage.getItem('pinInLocalStorage'));\r\n\r\n        socket.emit('user-request-queue-up', {pin: localStorage.getItem('pinInLocalStorage')});\r\n\r\n        socket.on('host-response-queue-down', (data) => {\r\n            console.log('song info received');\r\n            if(data.songs) {\r\n                this.setState({songs: data.songs})\r\n                this.setState({currentVid: data.currentSong});\r\n                localStorage.setItem('songsInLocalStorage', JSON.stringify(data.songs))\r\n            } else {\r\n                this.setState({currentVid: \"\"});\r\n            }\r\n        });\r\n    }\r\n\r\n    //Method to add song to host room\r\n    addRequests = (songs) => {\r\n        console.log('SearchPage.js: adding new songs', songs);\r\n        this.setState({requests: []})\r\n        songs.map((song) => (\r\n          this.setState({ requests: [...this.state.requests, {\r\n            videoId: song.id.videoId,\r\n            title: song.snippet.title,\r\n            description: song.snippet.description,\r\n            thumbnail: song.snippet.thumbnails.default.url\r\n          }] })\r\n        ));\r\n      }\r\n\r\n      addSong = (song) => {\r\n        var duplicate = false\r\n        this.state.songs.map((item) => {\r\n            if(item.videoId === song.videoId){\r\n                duplicate = true\r\n            }\r\n        });\r\n\r\n        if(duplicate){\r\n            alert('That song is already in the queue!')\r\n        }\r\n        else{\r\n            console.log(song);\r\n            const newSong = {\r\n                videoId: song.videoId,\r\n                title: song.title,\r\n                description: song.description,\r\n                thumbnail: song.thumbnail\r\n            }\r\n            console.log('SearchPage.js: emmitting to server');\r\n            socket.emit('add-song-up', {song: newSong, pin: this.state.pin});\r\n            this.setState({ requests: [...this.state.requests.filter(item => item.videoId !== song.videoId)] });\r\n        }\r\n      }\r\n  \r\n      deleteSong = (videoId) => {\r\n          this.setState({ songs: [...this.state.songs.filter(song => song.videoId !== videoId)] });\r\n      }\r\n\r\n    handleGo(e) {\r\n        socket.emit('test', {pin: this.state.pin});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className =\"main-container\">\r\n                <Particles className=\"particles\"\r\n                    params={particleOpt}\r\n                />\r\n                <header className=\"search-header\">\r\n                    <h1>Room #{this.state.pin} Currently Playing: {this.state.currentVid}</h1>\r\n                </header>\r\n                <div className=\"searchBar-container\">\r\n                    <SearchBar addRequests={this.addRequests}/>\r\n                </div>\r\n                <div className=\"queue-container2\">\r\n                    <p className = \"queuePrompt\">Current Queue</p>\r\n                    <div className=\"queue-bounding\">\r\n                        <Songs songs={this.state.songs}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"song-container2\">\r\n                    <p className = \"songPrompt\">Search Results</p>\r\n                    <div className=\"song-bounding\">\r\n                    <SongRequests requests={this.state.requests} addSong={this.addSong}/>\r\n                    </div>\r\n                </div>\r\n            <div>\r\n            </div> \r\n                {/* <button onClick={this.handleGo} className='btn-enter' >Enter</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchPage;\r\n\r\n\r\n\r\n    ","import { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport logo from './OxCordLogoFinal.png';\r\n\r\nimport './App.css';\r\nimport CreateRoom from './components/CreateRoom';\r\nimport JoinRoom from './components/JoinRoom';\r\nimport Room from './components/pages/Room';\r\nimport JoinPage from './components/pages/JoinPage';\r\nimport SearchPage  from './components/pages/SearchPage';\r\n\r\nconst particleOpt = {\r\n  particles:{\r\n    number:{\r\n      value: 150,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" render={props => (\r\n          <div className=\"App\">\r\n            <Particles className=\"particles\"\r\n              params={particleOpt}\r\n            />\r\n            <header className=\"App-header\">\r\n              <div className =\"text\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <p>\r\n                  Welcome to OxCord, the world's first Video Player Sharer!\r\n                </p>\r\n                <h1>Join the Party!</h1>\r\n                <CreateRoom/>\r\n                <JoinRoom/>\r\n              </div>\r\n              </header>\r\n          </div>\r\n        )} />\r\n        <Route path=\"/room\" component={Room} />\r\n        <Route path=\"/joinPage\" component={JoinPage}/>\r\n        <Route path=\"/searchPage\" component={SearchPage}/>\r\n      </div>\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/OxCordLogoFinal.7b790bb6.png\";","module.exports = __webpack_public_path__ + \"static/media/oxImage.4800ea1d.jpg\";"],"sourceRoot":""}